#ifndef MBASE_NLQ_GLOBAL_DEF_H
#define MBASE_NLQ_GLOBAL_DEF_H

#include <mbase/synchronization.h>
#include <mbase/set.h>
#include <mbase/unordered_map.h>
#include <mbase/inference/inf_common.h>

MBASE_BEGIN
class NlqModel;
MBASE_END

struct table_relation_meta {
    mbase::string columnName;
    mbase::string columnDataType;
    mbase::string constraintName;
    mbase::string referenceTable;
    mbase::string referenceColumn;
};

inline mbase::I32 gMaxRows = 1000;
inline mbase::I32 gUserCount = 2;
inline mbase::I32 gListenPort = 8080;
inline mbase::I32 gNLayers = 999;
inline mbase::I32 gLoadedProcessorCounter = 0;
inline bool gIsWebui = true;
inline bool gSSLEnabled = false;
inline bool gForceCredentials = false;
inline bool gAutoDownload = true;
inline bool gEnableDbMetafile = false;
inline mbase::NlqModel* gGlobalModel = nullptr;
inline mbase::mutex gLoopSync;
inline mbase::set<mbase::string> gProvidedSchemas;
inline mbase::unordered_map<mbase::string, mbase::string> gSchemaTableMap;
inline mbase::string gListenHostname = "127.0.0.1";
inline mbase::string gSSLPublicPath;
inline mbase::string gSSLPrivatePath;
inline mbase::string gApiKey;
inline mbase::string gProgramPath = "@MBASE_NLQUERY_PROGRAM_PATH@";
inline mbase::string gModelPath = "@MBASE_NLQUERY_PROGRAM_PATH@/Qwen2.5-7B-Instruct-1M-NLQuery-q8_0.gguf";
inline mbase::string gHintFilePath;
inline mbase::inf_text_token_vector gSystemPromptTokens;

inline mbase::string gDBProvider = "postgresql";
inline mbase::string gDBHostname;
inline mbase::I32 gDBPort = 5432;
inline mbase::string gDBName;
inline mbase::string gDBUsername;
inline mbase::string gDBPassword;
inline mbase::string gTotalSchemaString; // Used if the static schema option is specified
inline mbase::unordered_map<mbase::string, mbase::vector<table_relation_meta>> gCachedTableRelations;

#endif //
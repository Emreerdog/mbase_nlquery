SELECT 
    t.table_name,
    json_agg(
        json_build_object(
            'column_name', c.column_name,
            'data_type', c.data_type,
            'constraint_type', tc.constraint_type,
            'referenced_table', ccu.table_name,
            'referenced_column', ccu.column_name
        )
    ) AS columns
FROM 
    information_schema.tables t
JOIN 
    information_schema.columns c 
    ON t.table_name = c.table_name 
    AND t.table_schema = c.table_schema
LEFT JOIN 
    information_schema.key_column_usage kcu 
    ON c.table_name = kcu.table_name 
    AND c.column_name = kcu.column_name 
    AND c.table_schema = kcu.table_schema
LEFT JOIN 
    information_schema.table_constraints tc 
    ON kcu.constraint_name = tc.constraint_name 
    AND kcu.table_schema = tc.table_schema
LEFT JOIN 
    information_schema.constraint_column_usage ccu 
    ON tc.constraint_type = 'FOREIGN KEY' 
    AND tc.constraint_name = ccu.constraint_name 
    AND tc.table_schema = ccu.table_schema
WHERE 
    t.table_schema = '%s' 
    AND t.table_type = 'BASE TABLE'
GROUP BY 
    t.table_name;

SELECT t.table_name, json_agg( json_build_object( 'column_name', c.column_name, 'data_type', c.data_type, 'constraint_type', tc.constraint_type, 'referenced_table', ccu.table_name, 'referenced_column', ccu.column_name ) ) AS columns FROM information_schema.tables t JOIN information_schema.columns c ON t.table_name = c.table_name AND t.table_schema = c.table_schema LEFT JOIN information_schema.key_column_usage kcu ON c.table_name = kcu.table_name AND c.column_name = kcu.column_name AND c.table_schema = kcu.table_schema LEFT JOIN information_schema.table_constraints tc ON kcu.constraint_name = tc.constraint_name AND kcu.table_schema = tc.table_schema LEFT JOIN information_schema.constraint_column_usage ccu ON tc.constraint_type = 'FOREIGN KEY' AND tc.constraint_name = ccu.constraint_name AND tc.table_schema = ccu.table_schema WHERE t.table_schema = 'public' AND t.table_type = 'BASE TABLE' GROUP BY t.table_name;